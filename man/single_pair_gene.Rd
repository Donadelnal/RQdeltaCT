% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RQdeltaCT.R
\name{single_pair_gene}
\alias{single_pair_gene}
\title{single_pair_gene}
\usage{
single_pair_gene(
  data,
  x,
  y,
  by.group = TRUE,
  point.size = 4,
  point.shape = 19,
  point.alpha = 0.7,
  colors = c("#66c2a5", "#fc8d62"),
  axis.title.size = 11,
  axis.text.size = 10,
  legend.title = "Group",
  legend.title.size = 11,
  legend.text.size = 11,
  legend.position = "right",
  plot.title = "",
  plot.title.size = 14,
  labels = TRUE,
  label = c("eq", "R2", "p"),
  label.position.x = c(1, 1),
  label.position.y = c(1, 0.95),
  small.p = FALSE,
  small.r = FALSE,
  p.digits = 3,
  rr.digits = 2,
  save.to.tiff = FALSE,
  dpi = 600,
  width = 15,
  height = 15,
  name.tiff = "genes_single_pair_plot"
)
}
\arguments{
\item{data}{object returned from make_Ct_ready(), exp_Ct_dCt() or delta_Ct() functions.}

\item{x, y}{characters: names of genes to use.}

\item{by.group}{logical: if TRUE (default), relationships will be shown separately for compared groups.}

\item{point.size}{numeric: size of points. Default to 4.}

\item{point.shape}{integer: shape of points. Default to 19.}

\item{point.alpha}{numeric: transparency of points, a value between 0 and 1. Default to 0.7.}

\item{colors}{character vector containing colors for compared groups. Numbers of colors must be equal to number of groups. Default to c("#66c2a5", "#fc8d62").}

\item{axis.title.size}{integer: font size of axis titles. Default to 12.}

\item{axis.text.size}{integer: font size of axis text. Default to 10.}

\item{legend.title}{character: title of legend. Default to "Group".}

\item{legend.title.size}{integer: font size of legend title. Default to 12.}

\item{legend.text.size}{integer: font size of legend text. Default to 12.}

\item{legend.position}{position of the legend, one of "top", "right" (default), "bottom", "left", or "none" (no legend).
See description for legend.position parameter in ggplot2::theme() function.}

\item{plot.title}{character: title of plot. Default to "".}

\item{plot.title.size}{integer: font size of plot title. Default to 14.}

\item{labels}{logical: if TRUE (default), a regression statistics will be added to the plot using ggpimsc::stat_poly_eq() function.}

\item{label}{character: which regression statistics should be drawn, use names specified by ggpimsc::stat_poly_eq() function. Default to c("eq", "R2", "p") for regression equation, coefficient of determination and p value, respectively.}

\item{label.position.x, label.position.y}{numeric: coordinates for position of regression statistics. If by.group = TRUE, two values could be provided for each of these parameters (for different regression lines). See description of label.x and label.y parameters from ggpimsc::stat_poly_eq() function.}

\item{small.p, small.r}{logical, if TRUE, p in p value label and r in coefficient of determination label, will be lowercase. Default to FALSE.}

\item{rr.digits, p.digits}{integer: number of digits after the decimal point in coefficient of determination and p value in labels. Default to 2 for rr.digits and 3 for p.digits.}

\item{save.to.tiff}{logical: if TRUE, plot will be saved as .tiff file. Default to FALSE.}

\item{dpi}{integer: resolution of saved .tiff file. Default to 600.}

\item{width}{numeric: width (in cm) of saved .tiff file. Default to 15.}

\item{height}{integer: height (in cm) of saved .tiff file. Default to 15.}

\item{name.tiff}{character: name of saved .tiff file, without ".tiff" name of extension. Default to "samples_single_plot".}
}
\value{
Object with plot illustrating spatial arrangement of samples according to coordinates of 2 components obtained from principal component analysis (PCA). Created plot will be also displayed on graphic device.
}
\description{
Generate scatter plot with linear regression line for two specified genes. Could be useful to assess linear relationship between these genes.
}
\examples{
library(tidyverse)
library(ggpmisc)
data(data.Ct)
data.CtF <- filter_Ct(data.Ct,
                      remove.Gene = c("Gene2","Gene5","Gene6","Gene9","Gene11"),
                      remove.Sample = c("Control08","Control16","Control22"))
data.CtF.ready <- make_Ct_ready(data.CtF, imput.by.mean.within.groups = TRUE)
data.dCt <- delta_Ct(data.CtF.ready, ref = "Gene8")
single_pair_gene(data.dCt, "Gene16", "Gene17")

}
