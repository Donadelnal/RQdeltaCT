Flag == "NA", yes = "No",  no = "Yes"))
data
order <- arrange(filter(bar, Var1 == "Yes"), Freq)$Var2
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message(
"All Ct values were labeled as 'Reliable'.")
}
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message(
"Note: all Ct values were labeled as 'Reliable'.")
}
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message(
"Note: all Ct values were labeled as 'Reliable'.")
}
data <- data.Ct
data$Ct[data$Ct == "Undetermined"] <- 41
data
data$Ct <- as.numeric(data$Ct)
data
data <-
mutate(data, Reliable = ifelse(Ct > 40 |
Flag == "NA", yes = "No",  no = "Yes"))
data
bar <- as.data.frame(table(data$Reliable, data$Sample))
bar
order <- arrange(filter(bar, Var1 == "Yes"), Freq)$Var2
order
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message(
"Note: all Ct values were labeled as 'Reliable'.")
}
tab
#' sample.Ct.control[[2]]
#'
#' @importFrom dplyr mutate arrange filter rename desc
#' @importFrom tidyr pivot_wider
#' @importFrom magrittr %>%
#' @importFrom stats reorder
#' @importFrom ggplot2 ggplot geom_bar coord_flip scale_fill_manual xlab ylab labs theme_classic theme element_text scale_x_discrete ggsave
#' @import ggplot2
#' @import tidyverse
#'
control_Ct_barplot_sample <- function(data,
flag.Ct = "Undetermined",
maxCt = 35,
flag = "Undetermined",
colors = c("#66c2a5", "#fc8d62"),
x.axis.title = "",
y.axis.title = "Number",
axis.title.size = 11,
axis.text.size = 10,
plot.title = "",
plot.title.size = 14,
legend.title = "Reliable Ct value?",
legend.title.size = 11,
legend.text.size = 11,
legend.position = "top",
save.to.tiff = FALSE,
dpi = 600,
width = 15,
height = 15,
name.tiff = "Ct_control_barplot_for_samples") {
data$Ct[data$Ct == flag.Ct] <- 41
data$Ct <- as.numeric(data$Ct)
if (sum(colnames(data) %in% "Flag") > 0) {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt |
Flag == flag, yes = "No",  no = "Yes"))
} else {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt , yes = "No",  no = "Yes"))
}
bar <- as.data.frame(table(data$Reliable, data$Sample))
order <- arrange(filter(bar, Var1 == "Yes"), Freq)$Var2
barplot.samples <-
ggplot(bar, aes(
x = reorder(Var2, desc(Freq)),
y = Freq,
fill = Var1
)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(breaks = c("Yes", "No"),
values = c("Yes" = colors[1], "No" = colors[2])) +
xlab(x.axis.title) +
ylab(y.axis.title) +
labs(fill = legend.title, title = plot.title) +
theme_classic() +
theme(legend.position = legend.position) +
theme(axis.text = element_text(size = axis.text.size, color = 'black')) +
theme(axis.title = element_text(size = axis.title.size, color = 'black')) +
theme(legend.title = element_text(size = legend.title.size, colour =
"black")) +
theme(legend.text = element_text(size = legend.text.size, colour = "black")) +
theme(plot.title = element_text(size = plot.title.size)) +
scale_x_discrete(limits = order)
print(barplot.samples)
if (save.to.tiff == TRUE) {
ggsave(
paste(name.tiff, ".tiff", sep = ""),
barplot.samples,
dpi = dpi,
width = width,
height = height,
units = "cm",
compression = "lzw"
)
} else {
}
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message("Note: All Ct values were labeled as 'Reliable'.")
}
return(list(barplot.samples, tab))
}
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "NN",
maxCt = 40,
flag = "NN")
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "NN")
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "Undetermined")
#' sample.Ct.control[[2]]
#'
#' @importFrom dplyr mutate arrange filter rename desc
#' @importFrom tidyr pivot_wider
#' @importFrom magrittr %>%
#' @importFrom stats reorder
#' @importFrom ggplot2 ggplot geom_bar coord_flip scale_fill_manual xlab ylab labs theme_classic theme element_text scale_x_discrete ggsave
#' @import ggplot2
#' @import tidyverse
#'
control_Ct_barplot_sample <- function(data,
flag.Ct = "Undetermined",
maxCt = 35,
flag = "Undetermined",
colors = c("#66c2a5", "#fc8d62"),
x.axis.title = "",
y.axis.title = "Number",
axis.title.size = 11,
axis.text.size = 10,
plot.title = "",
plot.title.size = 14,
legend.title = "Reliable Ct value?",
legend.title.size = 11,
legend.text.size = 11,
legend.position = "top",
save.to.tiff = FALSE,
dpi = 600,
width = 15,
height = 15,
name.tiff = "Ct_control_barplot_for_samples") {
data$Ct[data$Ct == flag.Ct] <- 41
data$Ct <- as.numeric(data$Ct)
if (sum(colnames(data) %in% "Flag") > 0) {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt |
Flag == flag, yes = "No",  no = "Yes"))
} else {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt , yes = "No",  no = "Yes"))
}
bar <- as.data.frame(table(data$Reliable, data$Sample))
order <- arrange(filter(bar, Var1 == "Yes"), desc(Freq))$Var2
barplot.samples <-
ggplot(bar, aes(
x = reorder(Var2, desc(Freq)),
y = Freq,
fill = Var1
)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(breaks = c("Yes", "No"),
values = c("Yes" = colors[1], "No" = colors[2])) +
xlab(x.axis.title) +
ylab(y.axis.title) +
labs(fill = legend.title, title = plot.title) +
theme_classic() +
theme(legend.position = legend.position) +
theme(axis.text = element_text(size = axis.text.size, color = 'black')) +
theme(axis.title = element_text(size = axis.title.size, color = 'black')) +
theme(legend.title = element_text(size = legend.title.size, colour =
"black")) +
theme(legend.text = element_text(size = legend.text.size, colour = "black")) +
theme(plot.title = element_text(size = plot.title.size)) +
scale_x_discrete(limits = order)
print(barplot.samples)
if (save.to.tiff == TRUE) {
ggsave(
paste(name.tiff, ".tiff", sep = ""),
barplot.samples,
dpi = dpi,
width = width,
height = height,
units = "cm",
compression = "lzw"
)
} else {
}
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message("Note: All Ct values were labeled as 'Reliable'.")
}
return(list(barplot.samples, tab))
}
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "Undetermined")
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "NA",
maxCt = 40,
flag = "NA")
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "NA")
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "NA",
maxCt = 40,
flag = "NA")
sample.Ct.control[[2]]
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "NA",
maxCt = 40,
flag = "NA")
sample.Ct.control[[1]]
sample.Ct.control <- control_Ct_barplot_sample(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "NA")
sample.Ct.control[[2]]
dim(data.Ct)
d <- filter(data.Ct, Ct != "Undetermined")
dim(d)
sample.Ct.control <- control_Ct_barplot_sample(d,
#flag.Ct = "Undetermined",
maxCt = 40)
d
sample.Ct.control <- control_Ct_barplot_sample(d,
#flag.Ct = "Undetermined",
maxCt = 40,
flag = "NA")
sample.Ct.control <- control_Ct_barplot_sample(d,
#flag.Ct = "Undetermined",
maxCt = 38,
flag = "NA")
gene.Ct.control <- control_Ct_barplot_gene(data.Ct)
gene.Ct.control[[2]]
gene.Ct.control <- control_Ct_barplot_gene(data.Ct,
flag.Ct = "NA",
maxCt = 40,
flag = "NA")
#'
#' @importFrom dplyr mutate arrange filter rename select desc
#' @importFrom tidyr pivot_wider pivot_longer
#' @importFrom magrittr %>%
#' @importFrom tidyselect any_of
#' @importFrom stats reorder
#' @importFrom ggplot2 ggplot geom_bar coord_flip scale_fill_manual xlab ylab labs theme_classic theme element_text scale_x_discrete facet_wrap ggsave
#' @import ggplot2
#' @import tidyverse
#'
control_Ct_barplot_gene <- function(data,
flag.Ct = "Undetermined",
maxCt = 35,
flag = "Undetermined",
colors = c("#66c2a5", "#fc8d62"),
x.axis.title = "",
y.axis.title = "Number",
axis.title.size = 11,
axis.text.size = 10,
legend.title = "Reliable Ct value?",
legend.title.size = 11,
legend.text.size = 11,
legend.position = "top",
plot.title = "",
plot.title.size = 14,
save.to.tiff = FALSE,
dpi = 600,
width = 15,
height = 15,
name.tiff = "Ct_control_barplot_for_genes") {
data$Ct[data$Ct == flag.Ct] <- 41
data$Ct <- as.numeric(data$Ct)
if (sum(colnames(data) %in% "Flag") > 0) {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt |
Flag == flag, yes = "No",  no = "Yes"))
} else {
data <-
mutate(data, Reliable = ifelse(Ct > maxCt , yes = "No",  no = "Yes"))
}
bar <-
as.data.frame(table(data$Reliable, data$Gene, data$Group))
order <- arrange(filter(bar, Var1 == "Yes"), Freq)$Var2
barplot.genes <-
ggplot(bar, aes(
x = reorder(Var2, desc(Freq)),
y = Freq,
fill = Var1
)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(breaks = c("Yes", "No"),
values = c("Yes" = colors[1], "No" = colors[2])) +
xlab(x.axis.title) + ylab(y.axis.title) +
labs(fill = legend.title, title = plot.title) +
theme_classic() + theme(legend.position = legend.position) +
theme(axis.text = element_text(size = axis.text.size, color = 'black')) +
theme(axis.title = element_text(size = axis.title.size, color = 'black')) +
theme(legend.title = element_text(size = legend.title.size, colour =
"black")) +
theme(legend.text = element_text(size = legend.text.size, colour =
"black")) +
theme(plot.title = element_text(size = plot.title.size)) +
scale_x_discrete(limits = rev(unique(bar$Var2))) +
facet_wrap(vars(Var3))
print(barplot.genes)
if (save.to.tiff == TRUE) {
ggsave(
paste(name.tiff, ".tiff", sep = ""),
barplot.genes,
dpi = dpi,
width = width,
height = height,
units = "cm",
compression = "lzw"
)
}
tab <- table(data$Reliable, data$Sample)
tab <- tab %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
if (sum(colnames(tab) %in% "No") > 0) {
tab <- tab %>%
arrange(desc(No)) %>%
mutate(Not.reliable.fraction = No / (No + Yes)) %>%
rename(Sample = Var2,
Not.reliable = No,
Reliable = Yes)
} else {
tab <- tab %>%
arrange(Yes) %>%
rename(Sample = Var2,
Reliable = Yes)
message("Note: All Ct values were labeled as 'Reliable'.")
}
return(list(barplot.genes, tab))
}
gene.Ct.control <- control_Ct_barplot_gene(data.Ct,
flag.Ct = "NA",
maxCt = 40,
flag = "NA")
gene.Ct.control <- control_Ct_barplot_gene(data.Ct,
flag.Ct = "Undetermined",
maxCt = 40,
flag = "NA")
gene.Ct.control <- control_Ct_barplot_gene(data.Ct,
flag.Ct = "Undetermined",
maxCt = 41,
flag = "NA")
library(RQdeltaCT)
data(data.Ct)
str(data.Ct)
data(data.Ct.pairwise)
str(data.Ct.pairwise)
sample.Ct.control <- control_Ct_barplot_sample(data = data.Ct,
flag.Ct = "Undetermined",
maxCt = 35,
flag = c("Undetermined"),
axis.title.size = 9,
axis.text.size = 7,
plot.title.size = 9,
legend.title.size = 9,
legend.text.size = 9)
gene.Ct.control <- control_Ct_barplot_gene(data = data.Ct,
flag.Ct = "Undetermined",
maxCt = 35,
flag = c("Undetermined"),
axis.title.size = 9,
axis.text.size = 9,
plot.title.size = 9,
legend.title.size = 9,
legend.text.size = 9)
# Finding samples with more than half of the unreliable Ct values.
low.quality.samples <- filter(sample.Ct.control[[2]], Not.reliable.fraction > 0.5)$Sample
low.quality.samples <- as.vector(low.quality.samples)
low.quality.samples
# Finding genes with more than half of the unreliable Ct values in given group.
low.quality.genes <- filter(gene.Ct.control[[2]], Not.reliable.fraction > 0.5)$Gene
low.quality.genes <- unique(as.vector(low.quality.genes))
low.quality.genes
sample.Ct.control[[2]]
gene.Ct.control
head(gene.Ct.control[[2]])
head(sample.Ct.control[[2]])
library(RQdeltaCT)
library(RQdeltaCT)
library(roxygen2)
roxygenise()
library(RQdeltaCT)
tab <- tab %>%
arrange(Yes) %>%
rename(Gene = Var2,
Group = Var3,
Reliable = Yes)
?read.csv
data.Ct.10vs10 <- read.csv("data.Ct.10vs10",
header = TRUE,
sep = "\t")
data.Ct.10vs10 <- read.csv("data.Ct.10vs10.txt",
header = TRUE,
sep = "\t")
data.Ct.10vs10
class(data.Ct.10vs10)
usethis::use_data(data.Ct.10vs10)
?document
library(roxygen2)
roxygenise()
roxygenise()
library(RQdeltaCT)
