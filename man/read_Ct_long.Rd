% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RQdeltaCT.R
\name{read_Ct_long}
\alias{read_Ct_long}
\title{read_Ct_long}
\usage{
read_Ct_long(
  path,
  sep,
  dec,
  skip = 0,
  column.Sample,
  column.Gene,
  column.Ct,
  column.Group,
  add.column.Flag = FALSE,
  column.Flag
)
}
\arguments{
\item{path}{path to a .txt file with long-type table of Ct values. This table should contain at least  4 columns, with
sample names, gene names, Ct values and group names (those columns will be imported by this function).
Imported table could also contain a column with flag information, which could be optionally imported (see add.col.Flag and col.Flag parameters).}

\item{sep}{character of a field separator in imported file.}

\item{dec}{character used for decimal points in Ct values.}

\item{skip}{integer: number of lines of the data file to skip before beginning to read data. Default to 0.}

\item{col.Sample}{integer: number of column with sample names.}

\item{col.Gene}{integer: number of column with gene names.}

\item{col.Ct}{integer: number of column with Ct values.}

\item{col.Group}{integer: number of column with group names.}

\item{add.col.Flag}{logical: if data contains a column with flag information which should be also imported, this parameters should be set to TRUE. Default to FALSE.}

\item{col.Flag}{integer: number of column with flag information. Should be specified if add.col.Flag = TRUE.
This column should contain a character-type values (ex. "Undetermined" and "OK"), however,
other types of values are allowed (ex. numeric), but must be converted to character or factor after importing data (see examples).}
}
\value{
Data.frame in long format ready to analysis.
}
\description{
Imports long-format table with Ct values.
}
\examples{
path <- system.file("extdata", "data_Ct_long.txt", package = "RQdeltaCT")

library(tidyverse)
data.Ct <- read_Ct_long(path = path, sep = "\t",dec = ".",skip = 0,
                        add.column.Flag = TRUE, column.Sample = 1, column.Gene = 2,
                        column.Ct = 5, column.Group = 9, column.Flag = 4)
str(data.Ct)

data.Ct <- mutate(data.Ct, Flag = ifelse(Flag < 1, "Undetermined", "OK"))
str(data.Ct)

}
