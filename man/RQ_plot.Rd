% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RQdeltaCT.R
\name{RQ_plot}
\alias{RQ_plot}
\title{RQ_plot}
\usage{
RQ_plot(
  data,
  use.p = TRUE,
  mode,
  p.threshold = 0.05,
  use.log10FCh = FALSE,
  log10FCh.threshold = 0,
  sel.Target = "all",
  bar.width = 0.8,
  signif.show = TRUE,
  signif.labels,
  signif.length = 0.2,
  signif.dist = 0.1,
  y.exp.low = 0.1,
  y.exp.up = 0.1,
  angle = 0,
  rotate = FALSE,
  colors = c("#66c2a5", "#fc8d62"),
  x.axis.title = "",
  y.axis.title = "log10(Fold change)",
  axis.title.size = 12,
  axis.text.size = 10,
  legend.text.size = 12,
  legend.title = "Selected as significant?",
  legend.title.size = 12,
  legend.position = "top",
  plot.title = "",
  plot.title.size = 14,
  dpi = 600,
  width = 15,
  height = 15,
  save.to.tiff = FALSE,
  name.tiff = "RQ_plot"
)
}
\arguments{
\item{data}{object returned from RQ_exp_Ct_dCt() or RQ_ddCt() functions.}

\item{use.p}{logical: if TRUE, bars of statistically significant genes will be distinguished by colors.}

\item{mode}{character: which p value should be used? One of the "t" (p values from Student's t test),
"mw" (p values from Mann-Whitney U test), "depends" (if data in both compared groups were considered as derived from normal distribution (p value from Shapiro_Wilk test > 0.05) - p
values from Student's t test will be used for significance assessment, otherwise p values from Mann-Whitney U test will be used for significance assessment).
There is one more option, if user intend to use another p values, ex. obtained from other statistical test,
a mode parameter could be set to "user". In this situation, before run RQ_plot function, user should to prepare
data.frame object names "user"with two columns, one named "Target" with Target names and second with p values. The order of columns must be kept as described.}

\item{p.threshold}{numeric: threshold of p values for statistical significance.}

\item{use.log10FCh}{logical: if TRUE, the criterion of fold change will be also used for significance assessment of genes.}

\item{log10FCh.threshold}{numeric: threshold of log10 fold change values used for significance assessment of genes.}

\item{sel.Target}{character vector with names of targets to include, or "all" (default) to use all names of targets.}

\item{bar.width}{numeric: width of bars.}

\item{signif.show}{logical: if TRUE, labels for statistical significance will be added to the plot.}

\item{signif.labels}{character vector with statistical significance labels (ex. "ns.","***", etc.) with number
of elements equal to nimber of targets used for plotting.
The ggsignif package was used for convenient adding labels, but there is one tricky point:
the same elements of labels can not be handled by used package and must be different.
It could be achieved by adding symmetrically white spaces to repeated labels, ex. "ns.", " ns. ", "  ns.  ".}

\item{signif.length}{numeric: length of horizontal bars, values from 0 to 1.}

\item{signif.dist}{numeric: distance between errorbar and significance label.
Could be in y axis units (if `faceting` = TRUE) or fraction of y axis value reached by errorbar (mean + sd value) (if `faceting` = TRUE).}

\item{y.exp.low, y.exp.up}{numeric: space between data on the plot and lower or upper axis. Useful to add extra space for statistical significance labels when `faceting` = TRUE.}

\item{angle}{integer: value of angle in which names of genes should be displayed. Default to 0.}

\item{rotate}{logical: if TRUE, bars will be arranged horizontally. Deafault to FALSE.}

\item{colors}{character vector length of one (when use.p = FALSE) or two (when use.p = TRUE), containing colors for significant and no significant genes.}

\item{x.axis.title}{character: title of x axis. Default to "Target".}

\item{y.axis.title}{character: title of y axis. Default to "value".}

\item{axis.title.size}{integer: font size of axis titles. Default to 12.}

\item{axis.text.size}{integer: font size of axis text. Default to 10.}

\item{legend.text.size}{integer: font size of legend text. Default to 12.}

\item{legend.title}{character: title of legend. Default to "Group".}

\item{legend.title.size}{integer: font size of legend title. Default to 12.}

\item{legend.position}{position of the legend, one of "top" (default), "right", "bottom", "left", or "none" (no legend).
See description for legend.position in ggplot2::theme() function.}

\item{plot.title}{character: title of plot. Default to "".}

\item{plot.title.size}{integer: font size of plot title. Default to 14.}

\item{dpi}{integer: resolution of saved .tiff file. Default to 600.}

\item{width}{numeric: width (in cm) of saved .tiff file. Default to 15.}

\item{height}{integer: height (in cm) of saved .tiff file. Default to 15.}

\item{save.to.tiff}{logical: if TRUE, plot will be saved as .tiff file. Default to FALSE.}

\item{name.tiff}{character: name of saved .tiff file, without ".tiff" name of extension. Default to "results_boxplot".}
}
\value{
List containing object with barplot and dataframe with results. Created plot will be also displayed on graphic device.
}
\description{
This function creates barplot illustrating fold change (when 2^-Ct or 2^-dCt methods are used) or RQ (when 2^-ddCt method is used) values.
with indicating of statistical significance.
}
\examples{
library(signif)
library(tidyverse)
data(data.Ct)
data.CtF <- filter_Ct(data.Ct,
                      remove.Target = c("Gene2","Gene5","Gene6","Gene9","Gene11"),
                      remove.Sample = c("Control08","Control16","Control22"))
data.CtF.ready <- make_Ct_ready(data.CtF, imput.by.mean.within.groups = TRUE)
data.dCt <- delta_Ct(data.CtF.ready, ref = "Gene8")
data.dCt.exp <- exp_delta_Ct(data.dCt)
data.dCt.expF <- filter_transformed_data(data.dCt.exp, remove.Sample = c("Control11"))
RQ.ddCt <- RQ_ddCt(data.dCt.expF, "Disease", "Control")

signif.labels <- c("****","**","ns."," ns. ","  ns.  ","   ns.   ","    ns.    ","     ns.     ","      ns.      ","       ns.       ",        "ns.        ","         ns.         ","          ns.          ","***")
RQ.plot <- RQ_plot(RQ.ddCt,
                   mode = "depends",
                   use.log10FCh = TRUE,
                   log10FCh.threshold = 0.30103,
                   signif.labels = signif.labels,
                   angle = 30)
head(RQ.plot[[2]])

# with user p values - in this example used p values are calculated using stats::wilcox.test() function:
user <- data.dCt \%>\%
pivot_longer(cols = -c(Group, Sample), names_to = "Target", values_to = "dCt") \%>\%
  group_by(Target) \%>\%
  summarise(MW_test_p = wilcox.test(dCt ~ Group)$p.value, .groups = "keep")

RQ.plot <- RQ_plot(RQ.ddCt,
                   mode = "user",
                   use.log10FCh = TRUE,
                   log10FCh.threshold = 0.30103,
                   signif.labels = signif.labels,
                   angle = 30)
head(RQ.plot[[2]])
}
